name: ESP32 OTA Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
          echo "Adding Arduino CLI to PATH"
          export PATH="${PWD}/bin:$PATH"
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
        shell: bash

      - name: Compile firmware
        run: |
          export PATH="${PWD}/bin:$PATH"
          arduino-cli compile \
            --fqbn esp32:esp32:esp32s3:ESP32S3_DEV \
            --output-dir build src/led_blink.ino
          mv build/*.bin firmware.bin
        shell: bash

      - name: Serve firmware locally
        run: |
          python3 -m http.server 8000 &
        shell: bash

      - name: Open Serveo tunnel
        run: |
          mkdir -p ~/.ssh
          printf 'Host serveo.net\n  StrictHostKeyChecking no\n' >> ~/.ssh/config
          ssh -o ServerAliveInterval=60 -R 80:localhost:8000 serveo.net > serveo.log 2>&1 &
          sleep 5
          PUBLIC_URL=$(grep -Eo 'https://[a-z0-9]+\\.serveo\\.net' serveo.log | head -n1)
          echo "PUBLIC_URL=${PUBLIC_URL}/firmware.bin" >> $GITHUB_ENV
        shell: bash

      - name: Notify ESP32 via MQTT
        env:
          MQTT_BROKER: ${{ secrets.MQTT_BROKER }}
          MQTT_USER: ${{ secrets.MQTT_USER }}
          MQTT_PASS: ${{ secrets.MQTT_PASS }}
          PUBLIC_URL: ${{ env.PUBLIC_URL }}
        run: |
          python3 - <<EOF
          import paho.mqtt.publish as publish
          publish.single(
            "esp32/ota/update",
            "${PUBLIC_URL}",
            hostname="${MQTT_BROKER}",
            auth={'username': "${MQTT_USER}", 'password': "${MQTT_PASS}"}
          )
          print("Published OTA URL:", "${PUBLIC_URL}")
          EOF
        shell: bash
